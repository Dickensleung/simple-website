{"version":3,"sources":["components/toggle.scss","components/toggle.css","util/breakpoints.scss"],"names":[],"mappings":"AAEA,QAGI,WAAA,CAFA,YAAA,CACA,8BAAA,CAEA,QAAA,CAEA,cAAA,CADA,UCAJ,CCQC,wBFbD,QAQM,UCCJ,CACF,CDCI,cAGI,mBAAA,CAFA,iBAAA,CACA,eCER,CDCQ,wBACI,kBAAA,CACA,qBCCZ,CDGI,iBAEI,aAAA,CADA,iBCAR,CDIM,0BAIE,aAAA,CAHA,iBAAA,CACA,SAAA,CACA,YCDR,CDIQ,gDACE,qBCFV,CDMM,oBAOE,2BAAA,CADA,oBAAA,CALA,aAAA,CACA,WAAA,CAMA,mBAAA,CALA,iBAAA,CAEA,KAAA,CADA,UCAR,CDOM,gBAQE,qCAAA,CADA,iBAAA,CADA,eAAA,CAJA,aAAA,CADA,iBAAA,CAGA,UAAA,CADA,YAAA,CAMA,+BAAA,CAJA,cCDR,CDQM,uCACE,sBAAA,CACA,SCNR,CDSM,wCACE,QAAA,CACA,UAAA,CACA,yBCPR","file":"components/toggle.css","sourcesContent":["@use '../util' as *;\r\n\r\n.toggle{\r\n    display: grid;\r\n    grid-template-columns: 1fr 3rem;\r\n    border:none;\r\n    margin: 0;\r\n    width: 100%;\r\n    padding: 1rem 0;\r\n    @include breakpoint(medium) {\r\n      width: auto;\r\n    }\r\n\r\n    label{\r\n        font-size: rem(14);\r\n        font-weight: 700;\r\n        color: var(--toggle);\r\n\r\n        &[for='dark']{\r\n            line-height: rem(24);\r\n            margin-right: rem(13);\r\n        }\r\n    }\r\n\r\n    &__wrapper {\r\n        position: relative;\r\n        height: rem(24);\r\n      }\r\n    \r\n      input[type='radio'] {\r\n        margin: 0 rem(-2) 0 rem(-2);\r\n        opacity: 0;\r\n        width: rem(24);\r\n        height: rem(24);\r\n    \r\n        &:focus ~ .toggle__button {\r\n          border: 2px solid white;\r\n        }\r\n      }\r\n    \r\n      &__background {\r\n        display: block;\r\n        height: 100%;\r\n        position: absolute;\r\n        width: 100%;\r\n        top: 0;\r\n        border-radius: rem(12);\r\n        background: var(--toggle-bg);\r\n        pointer-events: none;\r\n      }\r\n    \r\n      &__button {\r\n        position: absolute;\r\n        left: rem(3);\r\n        top: rem(3);\r\n        right: 100%;\r\n        width: rem(18);\r\n        height: rem(18);\r\n        border-radius: 50%;\r\n        background-color: var(--toggle-button);\r\n        transition: all 150ms ease-in-out;\r\n      }\r\n    \r\n      #light:checked ~ .toggle__button {\r\n        left: calc(100% - 21px);\r\n        right: 3px;\r\n      }\r\n    \r\n      #system:checked ~ .toggle__button {\r\n        left: 50%;\r\n        right: auto;\r\n        transform: translate(-50%);\r\n      }\r\n}",".toggle {\n  display: grid;\n  grid-template-columns: 1fr 3rem;\n  border: none;\n  margin: 0;\n  width: 100%;\n  padding: 1rem 0;\n}\n@media (min-width: 40em) {\n  .toggle {\n    width: auto;\n  }\n}\n.toggle label {\n  font-size: 0.875rem;\n  font-weight: 700;\n  color: var(--toggle);\n}\n.toggle label[for=dark] {\n  line-height: 1.5rem;\n  margin-right: 0.8125rem;\n}\n.toggle__wrapper {\n  position: relative;\n  height: 1.5rem;\n}\n.toggle input[type=radio] {\n  margin: 0 -0.125rem 0 -0.125rem;\n  opacity: 0;\n  width: 1.5rem;\n  height: 1.5rem;\n}\n.toggle input[type=radio]:focus ~ .toggle__button {\n  border: 2px solid white;\n}\n.toggle__background {\n  display: block;\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  border-radius: 0.75rem;\n  background: var(--toggle-bg);\n  pointer-events: none;\n}\n.toggle__button {\n  position: absolute;\n  left: 0.1875rem;\n  top: 0.1875rem;\n  right: 100%;\n  width: 1.125rem;\n  height: 1.125rem;\n  border-radius: 50%;\n  background-color: var(--toggle-button);\n  transition: all 150ms ease-in-out;\n}\n.toggle #light:checked ~ .toggle__button {\n  left: calc(100% - 21px);\n  right: 3px;\n}\n.toggle #system:checked ~ .toggle__button {\n  left: 50%;\n  right: auto;\n  transform: translate(-50%);\n}","// 640px, 1150px, 1400px\r\n$breakpoints-up: (\r\n\t'medium': '40em',\r\n\t'large': '71.875em',\r\n\t'xlarge': '87.5em',\r\n);\r\n\r\n// 639px, 1149px, 1399px\r\n$breakpoints-down: (\r\n\t'small': '39.9375em',\r\n\t'medium': '71.8125em',\r\n\t'large': '87.4375em',\r\n);\r\n\r\n@mixin breakpoint($size) {\r\n\t@media (min-width: map-get($breakpoints-up, $size)) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin breakpoint-down($size) {\r\n\t@media (max-width: map-get($breakpoints-down, $size)) {\r\n\t\t@content;\r\n\t}\r\n}"]}